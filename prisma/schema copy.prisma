// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


//media items TODO

model Book {
  id      String      @id @default(cuid())
  addDate DateTime @default(now())
  name    String   @db.VarChar(255) @unique
  email   String?
  Author String?
  Synopsis String?
  AverateRating Int

}

model visual_media {
  id      String      @id @default(cuid())
  addDate DateTime @default(now())
  name    String   @db.VarChar(255) @unique
  email   String?
  movie Boolean
  Author String?
  Synopsis String?
  AverateRating Int
}

model Podcast {
  id      String      @id @default(cuid())
  addDate DateTime @default(now())
  name    String   @db.VarChar(255) @unique
  email   String?
  Author String?
  Synopsis String?
  AverageRating Int
}

// media item actions TODO

model Reads {
  id        String      @id @default(cuid())
  userid  String   @unique
  ReadAt DateTime @default(now())
  Rating Int
  Review String?
}

model Watches {
  id        String      @id @default(cuid())
  userid  String   @unique
  ReadAt DateTime @default(now())
  // TODO Add check constraint for checking 1,2,3,4,5 else for reads, watches, listens
  Rating Int
  Review String?
}

model Listens {
  id        String      @id @default(cuid())
  userid  String   @unique
  ReadAt DateTime @default(now())
  Rating Int
  Review String?
}


// Extra: Tags
model tagsBook {
  book_id String
  book_tagId String
  @@unique([book_id, book_tagId])
}

model tagsVisual_media {
  book_id String
  book_tagId String

  @@unique([book_id, book_tagId])
}

model tagsPodcast {
  book_id String
  book_tagId String

  @@unique([book_id, book_tagId])
}

// The actual tags
model bookTags {
  bookTagId String @id @default(cuid())
  tag_name String @unique
  description String? 
}

model visualMediaTags {
  visualMediaTagId String @id @default(cuid())
  tag_name String @unique
  description String? 
}

model podcastTags {
  podcastTagId String @id @default(cuid())
  tag_name String @unique
  description String? 
}